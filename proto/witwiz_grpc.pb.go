// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WitWizClient is the client API for WitWiz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WitWizClient interface {
	JoinGame(ctx context.Context, opts ...grpc.CallOption) (WitWiz_JoinGameClient, error)
}

type witWizClient struct {
	cc grpc.ClientConnInterface
}

func NewWitWizClient(cc grpc.ClientConnInterface) WitWizClient {
	return &witWizClient{cc}
}

func (c *witWizClient) JoinGame(ctx context.Context, opts ...grpc.CallOption) (WitWiz_JoinGameClient, error) {
	stream, err := c.cc.NewStream(ctx, &WitWiz_ServiceDesc.Streams[0], "/witwiz.WitWiz/JoinGame", opts...)
	if err != nil {
		return nil, err
	}
	x := &witWizJoinGameClient{stream}
	return x, nil
}

type WitWiz_JoinGameClient interface {
	Send(*PlayerInput) error
	Recv() (*GameStateUpdate, error)
	grpc.ClientStream
}

type witWizJoinGameClient struct {
	grpc.ClientStream
}

func (x *witWizJoinGameClient) Send(m *PlayerInput) error {
	return x.ClientStream.SendMsg(m)
}

func (x *witWizJoinGameClient) Recv() (*GameStateUpdate, error) {
	m := new(GameStateUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WitWizServer is the server API for WitWiz service.
// All implementations must embed UnimplementedWitWizServer
// for forward compatibility
type WitWizServer interface {
	JoinGame(WitWiz_JoinGameServer) error
	mustEmbedUnimplementedWitWizServer()
}

// UnimplementedWitWizServer must be embedded to have forward compatible implementations.
type UnimplementedWitWizServer struct {
}

func (UnimplementedWitWizServer) JoinGame(WitWiz_JoinGameServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinGame not implemented")
}
func (UnimplementedWitWizServer) mustEmbedUnimplementedWitWizServer() {}

// UnsafeWitWizServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WitWizServer will
// result in compilation errors.
type UnsafeWitWizServer interface {
	mustEmbedUnimplementedWitWizServer()
}

func RegisterWitWizServer(s grpc.ServiceRegistrar, srv WitWizServer) {
	s.RegisterService(&WitWiz_ServiceDesc, srv)
}

func _WitWiz_JoinGame_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WitWizServer).JoinGame(&witWizJoinGameServer{stream})
}

type WitWiz_JoinGameServer interface {
	Send(*GameStateUpdate) error
	Recv() (*PlayerInput, error)
	grpc.ServerStream
}

type witWizJoinGameServer struct {
	grpc.ServerStream
}

func (x *witWizJoinGameServer) Send(m *GameStateUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func (x *witWizJoinGameServer) Recv() (*PlayerInput, error) {
	m := new(PlayerInput)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WitWiz_ServiceDesc is the grpc.ServiceDesc for WitWiz service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WitWiz_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "witwiz.WitWiz",
	HandlerType: (*WitWizServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinGame",
			Handler:       _WitWiz_JoinGame_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/witwiz.proto",
}
