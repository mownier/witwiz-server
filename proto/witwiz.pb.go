// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.29.3
// source: proto/witwiz.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerInput_Action int32

const (
	PlayerInput_NONE                PlayerInput_Action = 0
	PlayerInput_MOVE_RIGHT_START    PlayerInput_Action = 1
	PlayerInput_MOVE_RIGHT_STOP     PlayerInput_Action = 2
	PlayerInput_MOVE_LEFT_START     PlayerInput_Action = 3
	PlayerInput_MOVE_LEFT_STOP      PlayerInput_Action = 4
	PlayerInput_MOVE_UP_START       PlayerInput_Action = 5
	PlayerInput_MOVE_UP_STOP        PlayerInput_Action = 6
	PlayerInput_MOVE_DOWN_START     PlayerInput_Action = 7
	PlayerInput_MOVE_DOWN_STOP      PlayerInput_Action = 8
	PlayerInput_SHOOT               PlayerInput_Action = 9
	PlayerInput_SELECT_CHARACTER    PlayerInput_Action = 10
	PlayerInput_PAUSE_RESUME        PlayerInput_Action = 11
	PlayerInput_TILE_CHUNKS_REQUEST PlayerInput_Action = 12
)

// Enum value maps for PlayerInput_Action.
var (
	PlayerInput_Action_name = map[int32]string{
		0:  "NONE",
		1:  "MOVE_RIGHT_START",
		2:  "MOVE_RIGHT_STOP",
		3:  "MOVE_LEFT_START",
		4:  "MOVE_LEFT_STOP",
		5:  "MOVE_UP_START",
		6:  "MOVE_UP_STOP",
		7:  "MOVE_DOWN_START",
		8:  "MOVE_DOWN_STOP",
		9:  "SHOOT",
		10: "SELECT_CHARACTER",
		11: "PAUSE_RESUME",
		12: "TILE_CHUNKS_REQUEST",
	}
	PlayerInput_Action_value = map[string]int32{
		"NONE":                0,
		"MOVE_RIGHT_START":    1,
		"MOVE_RIGHT_STOP":     2,
		"MOVE_LEFT_START":     3,
		"MOVE_LEFT_STOP":      4,
		"MOVE_UP_START":       5,
		"MOVE_UP_STOP":        6,
		"MOVE_DOWN_START":     7,
		"MOVE_DOWN_STOP":      8,
		"SHOOT":               9,
		"SELECT_CHARACTER":    10,
		"PAUSE_RESUME":        11,
		"TILE_CHUNKS_REQUEST": 12,
	}
)

func (x PlayerInput_Action) Enum() *PlayerInput_Action {
	p := new(PlayerInput_Action)
	*p = x
	return p
}

func (x PlayerInput_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerInput_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_witwiz_proto_enumTypes[0].Descriptor()
}

func (PlayerInput_Action) Type() protoreflect.EnumType {
	return &file_proto_witwiz_proto_enumTypes[0]
}

func (x PlayerInput_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerInput_Action.Descriptor instead.
func (PlayerInput_Action) EnumDescriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{0, 0}
}

type PlayerInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         int32              `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterId      int32              `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	TileChunksToLoad []*TileChunkToLoad `protobuf:"bytes,3,rep,name=tile_chunks_to_load,json=tileChunksToLoad,proto3" json:"tile_chunks_to_load,omitempty"`
	Action           PlayerInput_Action `protobuf:"varint,4,opt,name=action,proto3,enum=witwiz.PlayerInput_Action" json:"action,omitempty"`
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInput) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerInput) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *PlayerInput) GetTileChunksToLoad() []*TileChunkToLoad {
	if x != nil {
		return x.TileChunksToLoad
	}
	return nil
}

func (x *PlayerInput) GetAction() PlayerInput_Action {
	if x != nil {
		return x.Action
	}
	return PlayerInput_NONE
}

type GameStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInitial       bool                  `protobuf:"varint,1,opt,name=is_initial,json=isInitial,proto3" json:"is_initial,omitempty"`
	GameStarted     bool                  `protobuf:"varint,2,opt,name=game_started,json=gameStarted,proto3" json:"game_started,omitempty"`
	GameOver        bool                  `protobuf:"varint,3,opt,name=game_over,json=gameOver,proto3" json:"game_over,omitempty"`
	GamePaused      bool                  `protobuf:"varint,4,opt,name=game_paused,json=gamePaused,proto3" json:"game_paused,omitempty"`
	LevelId         int32                 `protobuf:"varint,5,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	LevelPosition   *Point                `protobuf:"bytes,6,opt,name=level_position,json=levelPosition,proto3" json:"level_position,omitempty"`
	LevelSize       *Size                 `protobuf:"bytes,7,opt,name=level_size,json=levelSize,proto3" json:"level_size,omitempty"`
	NextLevelPortal *NextLevelPortalState `protobuf:"bytes,8,opt,name=next_level_portal,json=nextLevelPortal,proto3" json:"next_level_portal,omitempty"`
	CharacterIds    []int32               `protobuf:"varint,9,rep,packed,name=character_ids,json=characterIds,proto3" json:"character_ids,omitempty"`
	Players         []*PlayerState        `protobuf:"bytes,10,rep,name=players,proto3" json:"players,omitempty"`
	Obstacles       []*ObstacleState      `protobuf:"bytes,11,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
	LevelEdges      []*LevelEdgeState     `protobuf:"bytes,12,rep,name=level_edges,json=levelEdges,proto3" json:"level_edges,omitempty"`
	TileChunks      []*TileChunk          `protobuf:"bytes,13,rep,name=tile_chunks,json=tileChunks,proto3" json:"tile_chunks,omitempty"`
}

func (x *GameStateUpdate) Reset() {
	*x = GameStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateUpdate) ProtoMessage() {}

func (x *GameStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateUpdate.ProtoReflect.Descriptor instead.
func (*GameStateUpdate) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{1}
}

func (x *GameStateUpdate) GetIsInitial() bool {
	if x != nil {
		return x.IsInitial
	}
	return false
}

func (x *GameStateUpdate) GetGameStarted() bool {
	if x != nil {
		return x.GameStarted
	}
	return false
}

func (x *GameStateUpdate) GetGameOver() bool {
	if x != nil {
		return x.GameOver
	}
	return false
}

func (x *GameStateUpdate) GetGamePaused() bool {
	if x != nil {
		return x.GamePaused
	}
	return false
}

func (x *GameStateUpdate) GetLevelId() int32 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *GameStateUpdate) GetLevelPosition() *Point {
	if x != nil {
		return x.LevelPosition
	}
	return nil
}

func (x *GameStateUpdate) GetLevelSize() *Size {
	if x != nil {
		return x.LevelSize
	}
	return nil
}

func (x *GameStateUpdate) GetNextLevelPortal() *NextLevelPortalState {
	if x != nil {
		return x.NextLevelPortal
	}
	return nil
}

func (x *GameStateUpdate) GetCharacterIds() []int32 {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *GameStateUpdate) GetPlayers() []*PlayerState {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameStateUpdate) GetObstacles() []*ObstacleState {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

func (x *GameStateUpdate) GetLevelEdges() []*LevelEdgeState {
	if x != nil {
		return x.LevelEdges
	}
	return nil
}

func (x *GameStateUpdate) GetTileChunks() []*TileChunk {
	if x != nil {
		return x.TileChunks
	}
	return nil
}

type PlayerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CharacterId    int32   `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	MaxSpeed       float32 `protobuf:"fixed32,3,opt,name=max_speed,json=maxSpeed,proto3" json:"max_speed,omitempty"`
	Position       *Point  `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Size           *Size   `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
	Velocity       *Vector `protobuf:"bytes,6,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Acceleration   *Vector `protobuf:"bytes,7,opt,name=acceleration,proto3" json:"acceleration,omitempty"`
	TargetVelocity *Vector `protobuf:"bytes,8,opt,name=target_velocity,json=targetVelocity,proto3" json:"target_velocity,omitempty"`
}

func (x *PlayerState) Reset() {
	*x = PlayerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerState) ProtoMessage() {}

func (x *PlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerState.ProtoReflect.Descriptor instead.
func (*PlayerState) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerState) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *PlayerState) GetMaxSpeed() float32 {
	if x != nil {
		return x.MaxSpeed
	}
	return 0
}

func (x *PlayerState) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerState) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *PlayerState) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *PlayerState) GetAcceleration() *Vector {
	if x != nil {
		return x.Acceleration
	}
	return nil
}

func (x *PlayerState) GetTargetVelocity() *Vector {
	if x != nil {
		return x.TargetVelocity
	}
	return nil
}

type NextLevelPortalState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position *Point `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Size     *Size  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *NextLevelPortalState) Reset() {
	*x = NextLevelPortalState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextLevelPortalState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextLevelPortalState) ProtoMessage() {}

func (x *NextLevelPortalState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextLevelPortalState.ProtoReflect.Descriptor instead.
func (*NextLevelPortalState) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{3}
}

func (x *NextLevelPortalState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NextLevelPortalState) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *NextLevelPortalState) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

type ObstacleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position *Point `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Size     *Size  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ObstacleState) Reset() {
	*x = ObstacleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObstacleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstacleState) ProtoMessage() {}

func (x *ObstacleState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstacleState.ProtoReflect.Descriptor instead.
func (*ObstacleState) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{4}
}

func (x *ObstacleState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObstacleState) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ObstacleState) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  float32 `protobuf:"fixed32,1,opt,name=width,proto3" json:"width,omitempty"`
	Height float32 `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{5}
}

func (x *Size) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Size) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{6}
}

func (x *Point) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{7}
}

func (x *Vector) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type LevelEdgeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position *Point `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Size     *Size  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *LevelEdgeState) Reset() {
	*x = LevelEdgeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelEdgeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelEdgeState) ProtoMessage() {}

func (x *LevelEdgeState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelEdgeState.ProtoReflect.Descriptor instead.
func (*LevelEdgeState) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{8}
}

func (x *LevelEdgeState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LevelEdgeState) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LevelEdgeState) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

type Tile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row int32 `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col int32 `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	Id  int32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Tile) Reset() {
	*x = Tile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{9}
}

func (x *Tile) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Tile) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

func (x *Tile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row   int32   `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col   int32   `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	Tiles []*Tile `protobuf:"bytes,3,rep,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *TileChunk) Reset() {
	*x = TileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TileChunk) ProtoMessage() {}

func (x *TileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TileChunk.ProtoReflect.Descriptor instead.
func (*TileChunk) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{10}
}

func (x *TileChunk) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *TileChunk) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

func (x *TileChunk) GetTiles() []*Tile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type TileChunkToLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row int32 `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col int32 `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
}

func (x *TileChunkToLoad) Reset() {
	*x = TileChunkToLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_witwiz_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TileChunkToLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TileChunkToLoad) ProtoMessage() {}

func (x *TileChunkToLoad) ProtoReflect() protoreflect.Message {
	mi := &file_proto_witwiz_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TileChunkToLoad.ProtoReflect.Descriptor instead.
func (*TileChunkToLoad) Descriptor() ([]byte, []int) {
	return file_proto_witwiz_proto_rawDescGZIP(), []int{11}
}

func (x *TileChunkToLoad) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *TileChunkToLoad) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

var File_proto_witwiz_proto protoreflect.FileDescriptor

var file_proto_witwiz_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x22, 0xcc, 0x03, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x13,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x69, 0x74, 0x77,
	0x69, 0x7a, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x54, 0x6f, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x10, 0x74, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x54, 0x6f,
	0x4c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x02, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x52, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x50, 0x5f,
	0x53, 0x54, 0x4f, 0x50, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x44,
	0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x4d,
	0x4f, 0x56, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x08, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x48, 0x4f, 0x4f, 0x54, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x10, 0x0a,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45,
	0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b,
	0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0c, 0x22, 0xcf, 0x04, 0x0a, 0x0f,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0e, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x48, 0x0a,
	0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69,
	0x7a, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x6f,
	0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73,
	0x12, 0x37, 0x0a, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x69, 0x6c,
	0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0xc3, 0x02,
	0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x29, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77,
	0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77,
	0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x22, 0x73, 0x0a, 0x14, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x6c, 0x0a, 0x0d, 0x4f, 0x62, 0x73, 0x74,
	0x61, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69,
	0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x34, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x23, 0x0a, 0x05,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x79, 0x22, 0x24, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x6d, 0x0a, 0x0e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x45, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69,
	0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3a, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63,
	0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x53, 0x0a, 0x09, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f,
	0x77, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x63, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x54, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x54, 0x69, 0x6c, 0x65, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x54, 0x6f, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x32, 0x48,
	0x0a, 0x06, 0x57, 0x69, 0x74, 0x57, 0x69, 0x7a, 0x12, 0x3e, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x77, 0x69, 0x74, 0x77, 0x69, 0x7a, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x77, 0x69, 0x74, 0x77,
	0x69, 0x7a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0e, 0x5a, 0x0c, 0x77, 0x69, 0x74, 0x77,
	0x69, 0x7a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_witwiz_proto_rawDescOnce sync.Once
	file_proto_witwiz_proto_rawDescData = file_proto_witwiz_proto_rawDesc
)

func file_proto_witwiz_proto_rawDescGZIP() []byte {
	file_proto_witwiz_proto_rawDescOnce.Do(func() {
		file_proto_witwiz_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_witwiz_proto_rawDescData)
	})
	return file_proto_witwiz_proto_rawDescData
}

var file_proto_witwiz_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_witwiz_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_witwiz_proto_goTypes = []interface{}{
	(PlayerInput_Action)(0),      // 0: witwiz.PlayerInput.Action
	(*PlayerInput)(nil),          // 1: witwiz.PlayerInput
	(*GameStateUpdate)(nil),      // 2: witwiz.GameStateUpdate
	(*PlayerState)(nil),          // 3: witwiz.PlayerState
	(*NextLevelPortalState)(nil), // 4: witwiz.NextLevelPortalState
	(*ObstacleState)(nil),        // 5: witwiz.ObstacleState
	(*Size)(nil),                 // 6: witwiz.Size
	(*Point)(nil),                // 7: witwiz.Point
	(*Vector)(nil),               // 8: witwiz.Vector
	(*LevelEdgeState)(nil),       // 9: witwiz.LevelEdgeState
	(*Tile)(nil),                 // 10: witwiz.Tile
	(*TileChunk)(nil),            // 11: witwiz.TileChunk
	(*TileChunkToLoad)(nil),      // 12: witwiz.TileChunkToLoad
}
var file_proto_witwiz_proto_depIdxs = []int32{
	12, // 0: witwiz.PlayerInput.tile_chunks_to_load:type_name -> witwiz.TileChunkToLoad
	0,  // 1: witwiz.PlayerInput.action:type_name -> witwiz.PlayerInput.Action
	7,  // 2: witwiz.GameStateUpdate.level_position:type_name -> witwiz.Point
	6,  // 3: witwiz.GameStateUpdate.level_size:type_name -> witwiz.Size
	4,  // 4: witwiz.GameStateUpdate.next_level_portal:type_name -> witwiz.NextLevelPortalState
	3,  // 5: witwiz.GameStateUpdate.players:type_name -> witwiz.PlayerState
	5,  // 6: witwiz.GameStateUpdate.obstacles:type_name -> witwiz.ObstacleState
	9,  // 7: witwiz.GameStateUpdate.level_edges:type_name -> witwiz.LevelEdgeState
	11, // 8: witwiz.GameStateUpdate.tile_chunks:type_name -> witwiz.TileChunk
	7,  // 9: witwiz.PlayerState.position:type_name -> witwiz.Point
	6,  // 10: witwiz.PlayerState.size:type_name -> witwiz.Size
	8,  // 11: witwiz.PlayerState.velocity:type_name -> witwiz.Vector
	8,  // 12: witwiz.PlayerState.acceleration:type_name -> witwiz.Vector
	8,  // 13: witwiz.PlayerState.target_velocity:type_name -> witwiz.Vector
	7,  // 14: witwiz.NextLevelPortalState.position:type_name -> witwiz.Point
	6,  // 15: witwiz.NextLevelPortalState.size:type_name -> witwiz.Size
	7,  // 16: witwiz.ObstacleState.position:type_name -> witwiz.Point
	6,  // 17: witwiz.ObstacleState.size:type_name -> witwiz.Size
	7,  // 18: witwiz.LevelEdgeState.position:type_name -> witwiz.Point
	6,  // 19: witwiz.LevelEdgeState.size:type_name -> witwiz.Size
	10, // 20: witwiz.TileChunk.tiles:type_name -> witwiz.Tile
	1,  // 21: witwiz.WitWiz.JoinGame:input_type -> witwiz.PlayerInput
	2,  // 22: witwiz.WitWiz.JoinGame:output_type -> witwiz.GameStateUpdate
	22, // [22:23] is the sub-list for method output_type
	21, // [21:22] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_witwiz_proto_init() }
func file_proto_witwiz_proto_init() {
	if File_proto_witwiz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_witwiz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextLevelPortalState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObstacleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelEdgeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_witwiz_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TileChunkToLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_witwiz_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_witwiz_proto_goTypes,
		DependencyIndexes: file_proto_witwiz_proto_depIdxs,
		EnumInfos:         file_proto_witwiz_proto_enumTypes,
		MessageInfos:      file_proto_witwiz_proto_msgTypes,
	}.Build()
	File_proto_witwiz_proto = out.File
	file_proto_witwiz_proto_rawDesc = nil
	file_proto_witwiz_proto_goTypes = nil
	file_proto_witwiz_proto_depIdxs = nil
}
